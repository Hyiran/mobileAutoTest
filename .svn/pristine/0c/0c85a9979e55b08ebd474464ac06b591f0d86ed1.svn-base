package com.bmtc.svn.service;

import java.io.File;
import java.util.List;
import java.util.Map;

import com.bmtc.svn.domain.SvnRepo;
import com.bmtc.svn.domain.SvnUser;
import com.bmtc.svn.domain.SvnUserAuthzInfo;


/**
 * SvnService业务逻辑接口
 * 导出svn配置信息服务层
 * @author lpf7161
 *
 */
public interface SvnService {

	/**
	 * 导出到配置文件
	 * 
	 * @param svnRepoName
	 *            项目名
	 */
	void exportConfig(String svnRepoName) throws Exception;

	/**
	 * 导出到配置文件
	 * 
	 * @param svnRepo
	 *            项目
	 */
	void exportConfig(SvnRepo svnRepo) throws Exception;

	/**
	 * 导出svn协议的配置信息
	 * 
	 * @param svnRepo
	 *            项目
	 */
	void exportSVN(SvnRepo svnRepo) throws Exception;


	/**
	 * 获取有相同svn root的项目的权限列表
	 * 
	 * @param rootPath
	 *            svn root
	 * @return 有相同svn root的项目的权限列表
	 */
	Map<String, List<SvnUserAuthzInfo>> getSvnAuthsByRootPath(String rootPath);

	/**
	 * 获取项目的权限列表
	 * 
	 * @param svnRepoName
	 *            项目
	 * @return 项目的权限列表
	 */
	Map<String, List<SvnUserAuthzInfo>> getSvnUserAuthzInfos(String svnRepoName) throws Exception;

	/**
	 * 输出svn方式的密码文件
	 * 
	 * @param svnRepo
	 *            项目
	 * @param usrList
	 *            项目用户列表
	 */
	void exportPasswdSVN(SvnRepo svnRepo, List<SvnUser> usrList);

	/**
	 * 输出权限配置文件
	 * 
	 * @param svnRepo
	 *            项目
	 * @param resMap
	 *            项目的权限列表
	 */
	void exportAuthz(SvnRepo svnRepo, Map<String, List<SvnUserAuthzInfo>> resMap) throws Exception;


	/**
	 * 输出svn方式的svnserve.conf
	 * 
	 * @param svnRepo
	 *            项目
	 */
	void exportSvnConf(SvnRepo svnRepo);

	/**
	 * 写文件流
	 * 
	 * @param outFile
	 *            输出文件
	 * @param contents
	 *            内容
	 */
	void write(File outFile, String contents);

}
